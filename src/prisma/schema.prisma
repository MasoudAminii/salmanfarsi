generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int     @id @default(autoincrement())
  username String  @db.VarChar(255)
  password String  @db.VarChar(255)
  email    String  @db.VarChar(255)
  role     String? @db.VarChar(50)
}

model ContactUs {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  email       String   @db.VarChar(255)
  phone       String?  @db.VarChar(50)
  subject     String?  @db.VarChar(255)
  message     String   @db.Text
  submit_date DateTime @default(now())
}

model Category {
  id      Int     @id @default(autoincrement())
  name    String? @db.VarChar(50)
  name_en String? @db.VarChar(225)
  posts   Post[]
}

model Post {
  id           Int      @id @default(autoincrement())
  slug         String   @unique @db.VarChar(255)
  publish_date DateTime @default(now())
  title        String   @db.VarChar(255)
  title_en     String   @db.Text
  main_image   String   @db.VarChar(255)
  content1     String   @db.Text
  content1_en  String   @db.Text
  image1       String?  @db.VarChar(255)
  image2       String?  @db.VarChar(255)
  content2     String?  @db.Text
  content2_en  String?  @db.Text
  views        Int      @default(0)
  category_id  Int
  category     Category @relation(fields: [category_id], references: [id])

  @@index([category_id])
}

model Staff {
  id           Int     @id @default(autoincrement())
  name_fa      String  @db.VarChar(255)
  name_en      String  @db.VarChar(225)
  position_fa  String  @db.VarChar(255)
  position_en  String  @db.VarChar(225)
  education_fa String  @db.Text
  education_en String  @db.Text
  bio          String? @db.Text
  photo_url    String? @db.VarChar(255)
}

model Review {
  id          Int     @id @default(autoincrement())
  name_fa     String  @db.VarChar(100)
  name_en     String  @db.VarChar(100)
  position_fa String  @db.VarChar(100)
  position_en String  @db.VarChar(100)
  review_fa   String  @db.Text
  review_en   String  @db.Text
  image_url   String? @db.VarChar(255)
}
